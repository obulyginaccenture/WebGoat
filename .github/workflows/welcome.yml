name: Welcome

on:
  issues:
    types:
      - opened
  pull_request:
        paths-ignore:
            - '.txt'
            - '*.MD'
            - '*.md'
            - 'LICENSE'
            - 'docs/**'
  push:
#      tags-ignore:
#       - '*'
        paths-ignore:
            - '.txt'
            - '*.MD'
            - '*.md'
            - 'LICENSE'
            - 'docs/**'

jobs:
    build:
        runs-on: ubuntu-latest
        # display name of the job
        name: "Robot framework test"
        steps:
            # Uses an default action to checkout the code
            - uses: actions/checkout@v3
            # Uses an action to add Python to the VM
            - name: Setup Pyton
              uses: actions/setup-python@v4
              with:
                  python-version: '3.7'
                  architecture: x64
            # Uses an action to add JDK 17 to the VM (and mvn?)
            - name: set up JDK 17
              uses: actions/setup-java@v3
              with:
                  distribution: 'temurin'
                  java-version: 17
                  architecture: x64
            #Uses an action to set up a cache using a certain key based on the hash of the dependencies
            - name: Cache Maven packages
              uses: actions/cache@v3.0.11
              with:
                  path: ~/.m2
                  key: ubuntu-latest-m2-${{ hashFiles('**/pom.xml') }}
                  restore-keys: ubuntu-latest-m2-
            - uses: BSFishy/pip-action@v1
              with:
                  packages: |
                      robotframework
                      robotframework-SeleniumLibrary
                      webdriver-manager
            - name: Run with Maven
              run: mvn clean install
            - run: mkdir staging && cp target/*.jar staging
            - uses: actions/upload-artifact@v3
              with: 
                    name: artifact
                    path: staging
    docker_build:
      name: Build
      needs: build
      runs-on: "ubuntu-18.04"
      steps:
        - name: Checkout code
          uses: actions/checkout@v3
        - name: download artifact
          uses: actions/download-artifact@v3
          with: 
                name: artifact
        - name: Build an image from Dockerfile
          run: |
            docker build -t docker.io/my-organization/my-app:${{ github.sha }} .


